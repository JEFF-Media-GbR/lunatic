plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "7.1.0"
    id 'maven-publish'
}

group = 'com.jeff_media.lunatic'
version = '1.8-SNAPSHOT'

def javadocConfig = {
    options.tags = ["nms:a:Requires NMS support"]
    options.links 'https://hub.spigotmc.org/javadocs/spigot/'
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

jar.enabled = false

subprojects {

    apply plugin: 'java'
    apply plugin: 'maven-publish'

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = "jeff-media-public"
            url = "https://repo.jeff-media.com/public/"
        }
        maven {
            name = "spigotmc-repo"
            url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/groups/public/"
        }
    }

    tasks.named('test', Test) {
        useJUnitPlatform()

        maxHeapSize = '16G'

        testLogging {
            events "passed"
        }
    }

    dependencies {
        compileOnly 'org.jetbrains:annotations:24.0.1'
        testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    }

    javadoc.configure(javadocConfig)

    java {
        withJavadocJar()
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
    }

    def moduleName = it.name

    moduleName = "lunatic-" + moduleName

    publishing {
        publications {
            maven(MavenPublication) { publication ->
                groupId = this.group
                artifactId = moduleName
                version = this.version

                publication.artifact(jar)
            }
        }
        repositories {
            maven {
                credentials {
                    username "haha"
                    password "123"
                }
                url = 'https://repo.jeff-media.com/public'
            }
        }
    }
}

dependencies {
    implementation project(':core')
    implementation project(':data-structures')
    implementation project(':nms:generic')
    implementation project(path: ':nms:1.19.4', configuration: 'reobf')
}

shadowJar {
    archiveClassifier.set('')
}

def exportedProjects = [
        ":",
        ":core",
        ":data-structures",
        ":nms"
]

task allJavadoc(type: Javadoc) {
    source exportedProjects.collect { project(it).sourceSets.main.allJava }
    classpath = files(exportedProjects.collect { project(it).sourceSets.main.compileClasspath })
    destinationDir = file("${buildDir}/docs/javadoc-all")
    configure(javadocConfig)
}

build {
    dependsOn(shadowJar)
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
    repositories {
        maven {
            credentials {
                username "haha"
                password "123"
            }
            url = 'https://repo.jeff-media.com/public'
        }
    }
}